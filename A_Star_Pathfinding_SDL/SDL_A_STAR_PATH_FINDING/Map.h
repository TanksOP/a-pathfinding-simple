#pragma once
#include <SDL.h>
#include <SDL_image.h>

#define TILE_SIZE 32




class Map {
public:
	const int MAP_DATA[24][32] = {
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
		{ 1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1 },
		{ 1,0,1,0,1,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1 },
		{ 1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,1 },
		{ 1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,1 },
		{ 1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,1,0,1,0,0,1 },
		{ 1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,1 },
		{ 1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1 },
		{ 1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1 },
		{ 1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1,1,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1 },
		{ 1,0,0,0,1,0,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,1 },
		{ 1,0,1,0,1,0,1,0,0,1,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1 },
		{ 1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1 },
		{ 1,0,1,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,1,1,0,0,1,0,0,1 },
		{ 1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1 },
		{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
	};
	Map(SDL_Renderer * renderer) : renderer(renderer) {}
	void init() {
		SDL_Surface * surface = IMG_Load("cache/Ground/ground_06.png");
		this->backgroundTexture = SDL_CreateTextureFromSurface(this->renderer, surface);
		SDL_FreeSurface(surface);
		surface = IMG_Load("cache/Crates/crate_02.png");
		this->crateTexture = SDL_CreateTextureFromSurface(this->renderer, surface);
		SDL_FreeSurface(surface);
	}
	void update() {}
	void draw() {
		for (int i = 0; i < 24; i++) {
			for (int j = 0; j < 32; j++) {
				SDL_Rect dest = { j * 32,i * 32,32,32 };
				SDL_RenderCopy(renderer, backgroundTexture, 0, &dest);
				if (MAP_DATA[i][j] == 1) {
					SDL_RenderCopy(renderer, crateTexture, 0, &dest);
				}
			}
		}
	}

	void clean() {
		SDL_DestroyTexture(backgroundTexture);
		SDL_DestroyTexture(crateTexture);
	}
private:
	SDL_Renderer * renderer;
	SDL_Texture * backgroundTexture;
	SDL_Texture * crateTexture;
};